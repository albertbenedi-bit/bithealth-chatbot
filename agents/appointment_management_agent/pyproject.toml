[project]
name = "appointment-management-agent"
version = "0.1.0"
description = "A microservice agent to handle booking, modifying, and querying appointments."
authors = [
    {name = "Benediktus Albert", email = "benediktus.albert@bithealth.co.id"}
]
readme = "README.md"
requires-python = ">=3.9,<4.0"
dependencies = [
    "fastapi>=0.109.0,<0.112.0",
    "uvicorn[standard]>=0.30.1,<0.31.0",
    "pydantic>=2.7.1,<3.0.0",
    "pydantic-settings>=2.10.1,<3.0.0",
    "structlog>=24.1.0,<25.0.0",
    "google-generativeai>=0.3.2,<0.4.0",
    "confluent-kafka>=2.3.0,<3.0.0",
    "sqlalchemy>=2.0.31,<3.0.0",
    "sqlalchemy-utils>=0.41.1,<0.42.0",
    "psycopg2-binary>=2.9.9,<3.0.0",
    "alembic>=1.13.1,<2.0.0",
    "prometheus-client>=0.20.0,<0.21.0",
    "opentelemetry-api>=1.23.0,<2.0.0",
    "opentelemetry-sdk>=1.23.0,<2.0.0",
    "opentelemetry-instrumentation-fastapi>=0.44b0,<0.45.0",
    "python-jose[cryptography]>=3.3.0,<4.0.0",
    "backoff>=2.2.1,<3.0.0",
]

[tool.poetry]
# This section tells Poetry where to find the package source code.
# By default, it looks for a package named 'appointment_management_agent' based on the project name.
# We are explicitly telling it that our package is the 'app' directory.
packages = [{ include = "app" }]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.23.5"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^24.1.1"
isort = "^5.13.2"
mypy = "^1.8.0"
ruff = "^0.2.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
line-length = 100
target-version = "py311"
